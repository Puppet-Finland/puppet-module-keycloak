embed-host-controller --std-out=echo

if (outcome == success) of /host=master/server-config=load-balancer:read-resource
/host=master/server-config=load-balancer:remove
end-if

if (outcome == success) of /server-group=load-balancer-group:read-resource
/server-group=load-balancer-group:remove
end-if

if (outcome == success) of /profile=load-balancer:read-resource
/profile=load-balancer:remove
end-if

if (outcome == success) of /socket-binding-group=load-balancer-sockets:read-resource
/socket-binding-group=load-balancer-sockets:remove
end-if

<%- if scope['keycloak::proxy_https'] -%>
if (result.proxy-address-forwarding != true) of /profile=auth-server-standalone/subsystem=undertow/server=default-server/http-listener=default:read-resource
/profile=auth-server-standalone/subsystem=undertow/server=default-server/http-listener=default:write-attribute(name=proxy-address-forwarding,value=true)
end-if

if (outcome != success) of /socket-binding-group=ha-sockets/socket-binding=proxy-https:read-resource
/socket-binding-group=ha-sockets/socket-binding=proxy-https:add(port=443)
end-if

if (result.redirect-socket != proxy-https) of /profile=auth-server-standalone/subsystem=undertow/server=default-server/http-listener=default:read-resource
/profile=auth-server-standalone/subsystem=undertow/server=default-server/http-listener=default:write-attribute(name=redirect-socket,value=proxy-https)
end-if
<%- end -%>
           
/profile=auth-server-standalone/subsystem=datasources/data-source=KeycloakDS:write-attribute(name=driver-name, value=<%= scope['keycloak::datasource_driver'] %>)
/profile=auth-server-standalone/subsystem=datasources/data-source=KeycloakDS:write-attribute(name=connection-url, value="<%= scope['keycloak::datasource_connection_url'] %>")
/profile=auth-server-standalone/subsystem=datasources/data-source=KeycloakDS:write-attribute(name=jndi-name, value=java:jboss/datasources/KeycloakDS)
/profile=auth-server-standalone/subsystem=datasources/data-source=KeycloakDS:write-attribute(name=user-name, value=<%= scope['keycloak::datasource_username'] %>)
/profile=auth-server-standalone/subsystem=datasources/data-source=KeycloakDS:write-attribute(name=password, value=<%= scope['keycloak::datasource_password'] %>)

/profile=auth-server-standalone/subsystem=datasources/data-source=KeycloakDS:write-attribute(name=background-validation, value=true)
/profile=auth-server-standalone/subsystem=datasources/data-source=KeycloakDS:write-attribute(name=check-valid-connection-sql, value="SELECT 1")
/profile=auth-server-standalone/subsystem=datasources/data-source=KeycloakDS:write-attribute(name=background-validation-millis, value=60000)
/profile=auth-server-standalone/subsystem=datasources/data-source=KeycloakDS:write-attribute(name=flush-strategy, value=IdleConnections)

try
/profile=auth-server-standalone/subsystem=datasources/jdbc-driver=postgresql:add(driver-module-name=org.postgresql,driver-name=postgresql,driver-xa-datasource-class-name=org.postgresql.xa.PGXADataSource)

catch
/profile=auth-server-standalone/subsystem=datasources/jdbc-driver=postgresql:remove
/profile=auth-server-standalone/subsystem=datasources/jdbc-driver=postgresql:add(driver-module-name=org.postgresql,driver-name=postgresql,driver-xa-datasource-class-name=org.postgresql.xa.PGXADataSource)
end-try

<%- if scope['keycloak::truststore'] -%>
if (outcome != success) of /profile=auth-server-standalone/subsystem=keycloak-server/spi=truststore:read-resource
/profile=auth-server-standalone/subsystem=keycloak-server/spi=truststore/:add
/profile=auth-server-standalone/subsystem=keycloak-server/spi=truststore/provider=file/:add(enabled=true)
end-if
/profile=auth-server-standalone/subsystem=keycloak-server/spi=truststore/provider=file/:map-put(name=properties,key=file,value=<%= scope['keycloak::install_base'] %>/domain/configuration/truststore.jks)
/profile=auth-server-standalone/subsystem=keycloak-server/spi=truststore/provider=file/:map-put(name=properties,key=password,value=<%= scope['keycloak::truststore_password'] %>)
/profile=auth-server-standalone/subsystem=keycloak-server/spi=truststore/provider=file/:map-put(name=properties,key=hostname-verification-policy,value=<%= scope['keycloak::truststore_hostname_verification_policy'] %>)
/profile=auth-server-standalone/subsystem=keycloak-server/spi=truststore/provider=file/:map-put(name=properties,key=disabled,value=false)
<%- else -%>
if (outcome == success) of /profile=auth-server-standalone/subsystem=keycloak-server/spi=truststore:read-resource
/subsystem=keycloak-server/subsystem=keycloak-server/spi=truststore/:remove
end-if
<%- end -%>

/profile=auth-server-standalone/subsystem=keycloak-server/theme=defaults/:write-attribute(name=staticMaxAge, value=<%= scope['keycloak::theme_static_max_age'] %>)
/profile=auth-server-standalone/subsystem=keycloak-server/theme=defaults/:write-attribute(name=cacheThemes, value=<%= scope['keycloak::theme_cache_themes'] %>)
/profile=auth-server-standalone/subsystem=keycloak-server/theme=defaults/:write-attribute(name=cacheTemplates, value=<%= scope['keycloak::theme_cache_templates'] %>)

try
/profile=auth-server-standalone/subsystem=keycloak-server/spi=userCache/provider=default/:add(enabled=<%= scope['keycloak::user_cache']%>)
catch
/profile=auth-server-standalone/subsystem=keycloak-server/spi=userCache/provider=default/:remove
/profile=auth-server-standalone/subsystem=keycloak-server/spi=userCache/provider=default/:add(enabled=<%= scope['keycloak::user_cache']%>)
end-try

<%- if scope['keycloak::syslog'] -%>
if (outcome != success) of /profile=auth-server-standalone/subsystem=logging/syslog-handler=SYSLOG:read-resource
/profile=auth-server-standalone/subsystem=logging/syslog-handler=SYSLOG:add
end-if
/profile=auth-server-standalone/subsystem=logging/syslog-handler=SYSLOG/:write-attribute(name=app-name, value=<%= scope['keycloak::syslog_app_name'] %>)
/profile=auth-server-standalone/subsystem=logging/syslog-handler=SYSLOG/:write-attribute(name=facility, value=<%= scope['keycloak::syslog_facility'] %>)
/profile=auth-server-standalone/subsystem=logging/syslog-handler=SYSLOG/:write-attribute(name=hostname, value=<%= scope['keycloak::syslog_hostname'] %>)
/profile=auth-server-standalone/subsystem=logging/syslog-handler=SYSLOG/:write-attribute(name=level, value=<%= scope['keycloak::syslog_level'] %>)
/profile=auth-server-standalone/subsystem=logging/syslog-handler=SYSLOG/:write-attribute(name=port, value=<%= scope['keycloak::syslog_port'] %>)
/profile=auth-server-standalone/subsystem=logging/syslog-handler=SYSLOG/:write-attribute(name=server-address, value=<%= scope['keycloak::syslog_server_address'] %>)
/profile=auth-server-standalone/subsystem=logging/syslog-handler=SYSLOG/:write-attribute(name=syslog-format, value=<%= scope['keycloak::syslog_format'] %>)
try
/profile=auth-server-standalone/subsystem=logging/root-logger=ROOT:add-handler(name=SYSLOG)
catch
/profile=auth-server-standalone/subsystem=logging/root-logger=ROOT:remove-handler(name=SYSLOG)
/profile=auth-server-standalone/subsystem=logging/root-logger=ROOT:add-handler(name=SYSLOG)      
end-try
<%- end -%>

<%- if scope['keycloak::syslog_audit_logging'] -%>
if (result != true) of /host=master/core-service=management/access=audit/server-logger=audit-log:read-attribute(name=enabled)
/host=master/core-service=management/access=audit/logger=audit-log:write-attribute(name=enabled,value=true)
end-if
if (outcome != success) of /host=master/core-service=management/access=audit/syslog-handler=mysyslog:read-resource
batch
/host=master/core-service=management/access=audit/syslog-handler=mysyslog:add(formatter=json-formatter)
/host=master/core-service=management/access=audit/syslog-handler=mysyslog/protocol=udp:add(host=<%= scope['keycloak::syslog_server_address'] %>,port=<%= scope['keycloak::syslog_port'] %>)
run-batch
end-if
if (outcome != success) of /host=master/core-service=management/access=audit/logger=audit-log/handler=mysyslog:read-resource
/host=master/core-service=management/access=audit/logger=audit-log/handler=mysyslog/:add
end-if
<%- end -%>

/server-group=auth-server-group:write-attribute(name=profile, value=auth-server-standalone)

stop-embedded-host-controller
